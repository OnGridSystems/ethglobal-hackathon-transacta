{
  "address": "0xE47F3bDf4df1835b75F403bE448f5f9D1283c02c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l1Bridge",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "sendMessageToL2",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa57aa5f70c4b5b2d6b96ae7bb228ef9d976966cccd15dd274ef0162703fec788",
  "receipt": {
    "to": null,
    "from": "0x7856D505162CbAa144b82114D399D3b652Da5B8B",
    "contractAddress": "0xE47F3bDf4df1835b75F403bE448f5f9D1283c02c",
    "transactionIndex": 125,
    "gasUsed": "322178",
    "logsBloom": "0x
    "blockHash": "0xb807e1377ba33ab3a5c0712011ed54a6e490756cc2ded944af06fd493ae96e43",
    "transactionHash": "0xa57aa5f70c4b5b2d6b96ae7bb228ef9d976966cccd15dd274ef0162703fec788",
    "logs": [],
    "blockNumber": 8783853,
    "cumulativeGasUsed": "24241977",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf6beeebb578e214ca9e23b0e9683454ff88ed2a7"
  ],
  "numDeployments": 1,
  "solcInputHash": "a0afdf9c48e68f18643ec1d194b20e2d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Bridge\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"sendMessageToL2\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L1Contract.sol\":\"L1Contract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBridge.sol\":{\"content\":\"// SPDX-License-Identifier: OWNED BY ConsenSys Software Inc.\\npragma solidity ^0.8.0;\\n\\n/// @title The bridge interface implemented on both chains\\ninterface IBridge {\\n  /// @notice Emitted on the origin chain when a message is to be sent to the destination chain\\n  /// @param _from the msg.sender calling the origin bridge\\n  /// @param _to the destination contract on the destination chain\\n  /// @param _fee the bridge fee on the origin chain\\n  /// @param _value the value to be transferred\\n  /// @param _deadline timestamp as second since unix epoch after which the transaction is invalid and can be dropped\\n  /// @param _calldata the calldata used by the destination bridge to call the destination contract\\n  /// @dev _calldata can be calculated using abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", recipient, amount))\\n  event MessageDispatched(\\n    address _from,\\n    address _to,\\n    uint256 _fee,\\n    uint256 _value,\\n    uint256 _deadline,\\n    bytes _calldata\\n  );\\n\\n  /// @notice Emitted on the destination chain when a message bas been received by the destination bridge\\n  /// @param _from the msg.sender calling the origin bridge\\n  /// @param _to the destination contract on the destination chain\\n  /// @param _fee the bridge fee on the origin chain\\n  /// @param _value the value to be transferred\\n  /// @param _deadline timestamp as second since unix epoch after which the transaction is invalid and can be dropped\\n  /// @param _calldata the calldata used by the destination bridge to call the destination contract\\n  /// @dev _calldata can be calculated using abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", recipient, amount))\\n  event MessageDelivered(\\n    address _from,\\n    address _to,\\n    uint256 _fee,\\n    uint256 _value,\\n    uint256 _deadline,\\n    bytes _calldata\\n  );\\n\\n  /// @notice Dispatches a message from the given chain. Must be called by a developer or another contract.\\n  /// @notice If this is the L2 bridge, then this methods dispatches a message from L2 to L1.\\n  /// @dev This function should be called with a value > _fee. The reminder will be send on the destination chain.\\n  /// @param _to the destination contract on the destination chain\\n  /// @param _fee the bridge fee on the origin chain\\n  /// @param _deadline timestamp as second since unix epoch after which the transaction is invalid and can be dropped\\n  /// @param _calldata the calldata used by the destination bridge to call the destination contract\\n  function dispatchMessage(\\n    address _to,\\n    uint256 _fee,\\n    uint256 _deadline,\\n    bytes calldata _calldata\\n  ) external payable;\\n\\n  /// @notice Deliver a message to the destination chain.\\n  /// @notice Is called automatically by the operator. Cannot be used by developers\\n  /// @param _from the msg.sender calling the origin bridge\\n  /// @param _to the destination contract on the destination chain\\n  /// @param _fee the bridge fee on the origin chain\\n  /// @param _value the value to be transferred\\n  /// @param _deadline timestamp as second since unix epoch after which the transaction is invalid and can be dropped\\n  /// @param _calldata the calldata used by the destination bridge to call the destination contract\\n  function deliverMessage(\\n    address _from,\\n    address _to,\\n    uint256 _fee,\\n    uint256 _value,\\n    uint256 _deadline,\\n    bytes calldata _calldata\\n  ) external payable;\\n\\n  /// @notice When called within the context of the delivered call can be used to return the sender (_from)\\n  /// @notice on the origin chain otherwise returns the zero address.\\n  /// @return Address of the caller contract on the origin chain.\\n  function sender() external view returns (address);\\n}\",\"keccak256\":\"0x80953ba3ed746792a42f4a865784b92b0d169bd0e22a023dfd7e2fe174eae7fd\",\"license\":\"OWNED BY ConsenSys Software Inc.\"},\"contracts/L1Contract.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IBridge.sol\\\";\\n\\ncontract L1Contract {\\n    address l1Bridge;\\n\\n    constructor(address _l1Bridge) {\\n      l1Bridge = _l1Bridge;\\n    }\\n\\n    function sendMessageToL2(address _to, bytes memory _calldata, uint256 fee) payable public {\\n      uint256 deadline = 999999999999;\\n\\n      IBridge bridge = IBridge(l1Bridge);\\n      bridge.dispatchMessage{value: msg.value}(\\n        _to,\\n        fee,\\n        deadline,\\n        _calldata\\n      );\\n    }\\n}\",\"keccak256\":\"0x4ff0fcf5235af59bf4c472d95abcf1db104af403fefd53585c7d03ba12e567d5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161057b38038061057b833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610464806101176000396000f3fe60806040526004361061001e5760003560e01c80637e0912b914610023575b600080fd5b61003d600480360381019061003891906102d6565b61003f565b005b600064e8d4a50fff905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663220b5b8234878686896040518663ffffffff1660e01b81526004016100af94939291906103e2565b6000604051808303818588803b1580156100c857600080fd5b505af11580156100dc573d6000803e3d6000fd5b50505050505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610127826100fc565b9050919050565b6101378161011c565b811461014257600080fd5b50565b6000813590506101548161012e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101ad82610164565b810181811067ffffffffffffffff821117156101cc576101cb610175565b5b80604052505050565b60006101df6100e8565b90506101eb82826101a4565b919050565b600067ffffffffffffffff82111561020b5761020a610175565b5b61021482610164565b9050602081019050919050565b82818337600083830152505050565b600061024361023e846101f0565b6101d5565b90508281526020810184848401111561025f5761025e61015f565b5b61026a848285610221565b509392505050565b600082601f8301126102875761028661015a565b5b8135610297848260208601610230565b91505092915050565b6000819050919050565b6102b3816102a0565b81146102be57600080fd5b50565b6000813590506102d0816102aa565b92915050565b6000806000606084860312156102ef576102ee6100f2565b5b60006102fd86828701610145565b935050602084013567ffffffffffffffff81111561031e5761031d6100f7565b5b61032a86828701610272565b925050604061033b868287016102c1565b9150509250925092565b61034e8161011c565b82525050565b61035d816102a0565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561039d578082015181840152602081019050610382565b60008484015250505050565b60006103b482610363565b6103be818561036e565b93506103ce81856020860161037f565b6103d781610164565b840191505092915050565b60006080820190506103f76000830187610345565b6104046020830186610354565b6104116040830185610354565b818103606083015261042381846103a9565b90509594505050505056fea264697066735822122011eeedd28b7d655a44fa51da437d99a8e1dfe2a8404cffec80c628da26b018c364736f6c63430008120033",
  "deployedBytecode": "0x60806040526004361061001e5760003560e01c80637e0912b914610023575b600080fd5b61003d600480360381019061003891906102d6565b61003f565b005b600064e8d4a50fff905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663220b5b8234878686896040518663ffffffff1660e01b81526004016100af94939291906103e2565b6000604051808303818588803b1580156100c857600080fd5b505af11580156100dc573d6000803e3d6000fd5b50505050505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610127826100fc565b9050919050565b6101378161011c565b811461014257600080fd5b50565b6000813590506101548161012e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101ad82610164565b810181811067ffffffffffffffff821117156101cc576101cb610175565b5b80604052505050565b60006101df6100e8565b90506101eb82826101a4565b919050565b600067ffffffffffffffff82111561020b5761020a610175565b5b61021482610164565b9050602081019050919050565b82818337600083830152505050565b600061024361023e846101f0565b6101d5565b90508281526020810184848401111561025f5761025e61015f565b5b61026a848285610221565b509392505050565b600082601f8301126102875761028661015a565b5b8135610297848260208601610230565b91505092915050565b6000819050919050565b6102b3816102a0565b81146102be57600080fd5b50565b6000813590506102d0816102aa565b92915050565b6000806000606084860312156102ef576102ee6100f2565b5b60006102fd86828701610145565b935050602084013567ffffffffffffffff81111561031e5761031d6100f7565b5b61032a86828701610272565b925050604061033b868287016102c1565b9150509250925092565b61034e8161011c565b82525050565b61035d816102a0565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561039d578082015181840152602081019050610382565b60008484015250505050565b60006103b482610363565b6103be818561036e565b93506103ce81856020860161037f565b6103d781610164565b840191505092915050565b60006080820190506103f76000830187610345565b6104046020830186610354565b6104116040830185610354565b818103606083015261042381846103a9565b90509594505050505056fea264697066735822122011eeedd28b7d655a44fa51da437d99a8e1dfe2a8404cffec80c628da26b018c364736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 72,
        "contract": "contracts/L1Contract.sol:L1Contract",
        "label": "l1Bridge",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}